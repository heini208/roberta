robot.plugin.factory=de.fhg.iais.roberta.factory.RobotFactory
robot.plugin.compiler.resources.dir=RobotRobotino/
robot.plugin.fileExtension.source=py
robot.plugin.fileExtension.binary=py
# robot specific toolboxes, default program and configuration
robot.program.toolbox.beginner=/ros/program.toolbox.beginner.xml
robot.program.toolbox.expert=/ros/program.toolbox.expert.xml
robot.program.default=/robotino/program.default.xml
robot.configuration.toolbox=/ros/configuration.toolbox.xml
robot.configuration.default=/ros/configuration.default.xml
#robot's long name to display
robot.real.name=robotino
robot.vendor=na
# robot's info for further information
robot.info.en=https://ip.festo-didactic.com/InfoPortal/Robotino/Overview/DE/index.html
robot.configuration=true
# either new or old-<sensorprefix> with <sensorprefix>="S" for all robots but mbot, which needs "P"
robot.configuration.type=new
robot.connection=#TODO
robot.sim=false
robot.descriptor=classpath:/robotino.yml
#robot.helperMethods=classpath:/helperMethodsRobotino.yml
robot.haswlan=true
robot.plugin.worker.validate.and.collect=de.fhg.iais.roberta.worker.RobotinoValidatorAndCollectorWorker
robot.plugin.worker.generate=de.fhg.iais.roberta.worker.RobotinoROSPythonGeneratorWorker
robot.plugin.worker.setup=de.fhg.iais.roberta.worker.CompilerSetupWorker
robot.plugin.worker.save=de.fhg.iais.roberta.worker.SaveWorker
# robot.plugin.worker.compile= #
robot.plugin.worker.transform.two2three=de.fhg.iais.roberta.worker.Two2ThreeTransformerWorker
robot.plugin.worker.transform.three2threeone=de.fhg.iais.roberta.worker.Three2ThreeOneTransformerWorker
# robot.plugin.workflow.run = #
# robot.plugin.workflow.runnative = #
# robot.plugin.workflow.compilenative= #
robot.plugin.workflow.transform=transform.two2three,transform.three2threeone
robot.plugin.workflow.showsource=validate.and.collect,generate
robot.plugin.workflow.compile=validate.and.collect,generate,setup,save

