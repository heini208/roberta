wait:
  ACCELERATION:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
    sensor: ACCELERATION
    mode: ACCELERATION
  ACCELEROMETER_VALUE_1:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
    sensor: ACCELERATION
    mode: DEFAULT
  ACCELEROMETER_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
    sensor: ACCELEROMETER
    mode: DEFAULT
  ACCELEROMETER_X_1:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
    sensor: ACCELERATION
    mode: X
  ACCELEROMETER_X:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
    sensor: ACCELEROMETER
    mode: X
  ACCELEROMETER_Y_1:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
    sensor: ACCELERATION
    mode: Y
  ACCELEROMETER_Y:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
    sensor: ACCELEROMETER
    mode: Y
  ACCELEROMETER_Z_1:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerationSensor
    sensor: ACCELERATION
    mode: Z
  ACCELEROMETER_Z:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.AccelerometerSensor
    sensor: ACCELEROMETER
    mode: Z
  COLOUR_AMBIENTLIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
    sensor: COLOUR
    mode: AMBIENTLIGHT
  COLOUR_COLOUR:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
    sensor: COLOUR
    mode: COLOUR
  COLOUR_LIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.ColorSensor
    sensor: COLOUR
    mode: LIGHT
  COMPASS_ANGLE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
    sensor: COMPASS
    mode: ANGLE
  COMPASS_COMPASS:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
    sensor: COMPASS
    mode: COMPASS
  COMPASS_X:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
    sensor: COMPASS
    mode: X
  COMPASS_Y:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
    sensor: COMPASS
    mode: Y
  COMPASS_Z:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.CompassSensor
    sensor: COMPASS
    mode: Z
  DROP_OFF_DISTANCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.DropSensor
    sensor: DROP_OFF
    mode: DISTANCE
  DROP_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.DropSensor
    sensor: DROP
    mode: VALUE
  ELECTRICCURRENT_VALUE_1:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.ElectricSensor
    sensor: ELECTRIC_CURRENT
    mode: VALUE
  ENCODER_DEGREE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
    sensor: ENCODER
    mode: DEGREE
  ENCODER_DISTANCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
    sensor: ENCODER
    mode: DISTANCE
  ENCODER_ROTATION:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.EncoderSensor
    sensor: ENCODER
    mode: ROTATION
  FLAME_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.FlameSensor
    sensor: FLAME
    mode: FLAME_VALUE
  GESTURE_ACTIVE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: GESTURE_ACTIVE, GESTURE_ACTIVE
  GESTURE_DOWN:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: DOWN
  GESTURE_FACE_DOWN:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: FACE_DOWN
  GESTURE_FACE_UP:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: FACE_UP
  GESTURE_FREEFALL:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: FREEFALL
  GESTURE_SHAKE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: SHAKE
  GESTURE_UP:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GestureSensor
    sensor: GESTURE
    mode: UP
  GYRO_ANGLE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
    sensor: GYRO
    mode: ANGLE
  GYRO_RATE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
    sensor: GYRO
    mode: RATE
  GYRO_TILTED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
    sensor: GYRO
    mode: TILTED
  GYRO_X:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
    sensor: GYRO
    mode: X
  GYRO_Y:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
    sensor: GYRO
    mode: Y
  GYRO_Z:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.GyroSensor
    sensor: GYRO
    mode: Z
  HTCOLOUR_AMBIENTLIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.HTColorSensor
    sensor: COLOUR
    mode: AMBIENTLIGHT
  HTCOLOUR_COLOUR:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.HTColorSensor
    sensor: COLOUR
    mode: COLOUR
  HTCOLOUR_LIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.HTColorSensor
    sensor: COLOUR
    mode: LIGHT
  HUMIDITY_HUMIDITY:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor
    sensor: HUMIDITY
    mode: HUMIDITY
  HUMIDITY_TEMPERATURE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.HumiditySensor
    sensor: HUMIDITY
    mode: TEMPERATURE
  INFRARED_AMBIENTLIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
    sensor: LIGHT
    mode: AMBIENTLIGHT
  INFRARED_DISTANCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: DISTANCE
  INFRARED_OBSTACLE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: OBSTACLE
  INFRARED_PRESENCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: PRESENCE
  INFRARED_SEEK:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: SEEK
  INFRARED_LINE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: LINE
  INFRARED_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: VALUE
  INFRARED_REFLEXION:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.InfraredSensor
    sensor: INFRARED
    mode: REFLEXION
  IRSEEKER_MODULATED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.IRSeekerSensor
    sensor: IRSEEKER
    mode: MODULATED
  IRSEEKER_UNMODULATED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.IRSeekerSensor
    sensor: IRSEEKER
    mode: UNMODULATED
  KEY_PRESSED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.KeysSensor
    sensor: KEY_PRESSED
    mode: PRESSED
  LIGHT_AMBIENTLIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
    sensor: LIGHT
    mode: AMBIENTLIGHT
  LIGHT_LEVEL:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
    sensor: LIGHT_LEVEL
    mode: LIGHT_LEVEL
  LIGHT_LIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
    sensor: LIGHT
    mode: LIGHT
  LIGHT_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.LightSensor
    sensor: LIGHT_VALUE
    mode: LIGHT_VALUE
  LIGHTVEML_LIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.VemlLightSensor
    sensor: LIGHTVEML_LIGHT
    mode: LIGHT
  LIGHTVEML_UVLIGHT:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.VemlLightSensor
    sensor: LIGHTVEML_LIGHT
    mode: UVLIGHT
  MICROPHONE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.MicrophoneSensor
    sensor: MICROPHONE
    mode: MICROPHONE
  MOISTURE_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.MoistureSensor
    sensor: MOISTURE
    mode: VALUE
  MOTION_PRESENCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.MotionSensor
    sensor: MOTION
    mode: PRESENCE
  ORIENTATION:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.OrientationSensor
    sensor: ORIENTATION
    mode: ORIENTATION
  PINTOUCH_PRESSED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinTouchSensor
    sensor: PINTOUCH
    mode: PRESSED
  PIN_ANALOG:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
    sensor: PIN_ANALOG
    mode: ANALOG
  PIN_DIGITAL:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
    sensor: PIN_DIGITAL
    mode: DIGITAL
  OUT_ANALOG:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
    sensor: PIN_ANALOG
    mode: ANALOG
  OUT_DIGITAL:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
    sensor: PIN_DIGITAL
    mode: DIGITAL
  PIN_PULSEHIGH:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
    sensor: PIN_PULSEHIGH
    mode: PULSEHIGH
  PIN_PULSELOW:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinGetValueSensor
    sensor: PIN_PULSELOW
    mode: PULSELOW
  PIN_TOUCHED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PinTouchSensor
    sensor: PIN_TOUCHED
    mode: PIN_TOUCHED
  POTENTIOMETER_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.VoltageSensor
    sensor: POTENTIOMETER
    mode: VALUE
  PULSE_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.PulseSensor
    sensor: PULSE
    mode: VALUE
  RFID_PRESENCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor
    sensor: RFID
    mode: PRESENCE
  RFID_IDONE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.RfidSensor
    sensor: RFID
    mode: IDONE
  SOUND:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor
    sensor: SOUND
    mode: VALUE
  SOUND_SOUND:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.SoundSensor
    sensor: SOUND
    mode: SOUND
  TEMPERATURE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
    sensor: TEMPERATURE
    mode: TEMPERATURE
  TEMPERATURE_PRESSURE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
    sensor: TEMPERATURE
    mode: PRESSURE
  TEMPERATURE_TEMPERATURE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
    sensor: TEMPERATURE
    mode: TEMPERATURE
  TEMPERATURE_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TemperatureSensor
    sensor: TEMPERATURE
    mode: TEMPERATURE
  TIME:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor
    sensor: TIME
    mode: VALUE
  TIMER_VALUE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TimerSensor
    sensor: TIME
    mode: VALUE
  TOUCH:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor
    sensor: TOUCH
    mode: TOUCH
  TOUCH_PRESSED:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.TouchSensor
    sensor: TOUCH
    mode: PRESSED
  ULTRASONIC_DISTANCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor
    sensor: ULTRASONIC
    mode: DISTANCE
  ULTRASONIC_PRESENCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.UltrasonicSensor
    sensor: ULTRASONIC
    mode: PRESENCE
  WALL_DISTANCE:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.WallSensor
    sensor: WALL
    mode: DISTANCE
  WALL_DISTANCE_1:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.WallSensor
    sensor: WALL
    mode: DISTANCE
  PARTICLE_PM25:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.ParticleSensor
    sensor: PARTICLE
    mode: PM25
  PARTICLE_PM10:
    implementor: de.fhg.iais.roberta.syntax.sensor.generic.ParticleSensor
    sensor: PARTICLE
    mode: PM10

mode:
  accelerometer: [ DEFAULT,VALUE ]
  axis: [ DEFAULT,STRENGTH,VALUE,X,Y,Z ]
  color: [ AMBIENTLIGHT,COLOUR,DEFAULT,RED,RGB ]
  compass: [ ANGLE,CALIBRATE,COMPASS,DEFAULT,VALUE ]
  drop: [ VALUE ]
  encoder: [ DEFAULT,DEGREE,DISTANCE,RESET,ROTATION ]
  gesture: [ DOWN,FACE_DOWN,FACE_UP,FREEFALL,G3,G6,G8,LEFT,SHAKE,UP,VALUE ]
  gyro: [ ANGLE,RATE,DEFAULT,RESET,TILTED,VALUE,X,Y,Z ]
  humidity: [ HUMIDITY,TEMPERATURE,VALUE ]
  temperature: [ TEMPERATURE, PRESSURE ]
  infrared: [ AMBIENTLIGHT,DEFAULT,DISTANCE,OBSTACLE,PRESENCE,SEEK,LINE,MODULATED,UNMODULATED,VALUE,REFLEXION, RCCODE, EDISON_CODE ]
  keys: [ PRESSED,WAIT_FOR_PRESS,WAIT_FOR_PRESS_AND_RELEASE ]
  light: [ AMBIENTLIGHT,DEFAULT,LEFT,LIGHT,LIGHT_VALUE,RED,RIGHT,VALUE ]
  lightveml: [ UVLIGHT,LIGHT ]
  moisture: [ VALUE,PRESENCE,VALUE ]
  pinpull: [ DOWN,NONE,UP ]
  pinvalue: [ ANALOG,DEFAULT,DIGITAL,PULSEHIGH,PULSELOW ]
  pulse: [ VALUE ]
  rfid: [ PRESENCE,SERIAL,VALUE ]
  detect: [ NAMEONE,IDONE,IDALL,NAMEALL ]
  sound: [ SOUND ]
  particle: [ PM25, PM10 ]

configuration:
  ACCELEROMETER: [ robBrick_accelerometer, robConf_accelerometer ]
  ANALOG_PIN: [ robActions_write_to_pin, robConf_analogout ]
  DIGITAL_PIN: [ robConf_digitalout ]
  ANALOG_INPUT: [ robConf_analogin ]
  DIGITAL_INPUT: [ robConf_digitalin ]
  ARDU: [ robBrick_motor_ardu ]
  BUTTON: [ robBrick_key_ ]
  BUZZER: [ robConf_buzzer, robActions_play_tone ]
  COLOR: [ robBrick_colour, robConf_colour]
  COMPASS: [ robBrick_compass, robConf_compass ]
  DETECT_MARK: [ naoSensors_naoMark ]
  DROP: [ robConf_drop, robBrick_drop ]
  ENCODER: [ robConf_encoder, robBrick_encoder ]
  EXTERNAL_LED: [ robBrick_led ]
  FLAMESENSOR: [ robBrick_flame ]
  GEARED_MOTOR: [ robBrick_motor_geared ]
  GYRO: [ robConf_gyro, robBrick_gyro ]
  HT_COLOR: [ robBrick_HiTechnic_colour, robBrick_htcolour ]
  HUMIDITY: [ robConf_humidity, robBrick_humidity ]
  INFRARED: [ robConf_infrared, robBrick_infrared ]
  IRSEEKER: [ robBrick_irseeker ]
  JOYSTICK: [ arduSensors_joystick_getSample, robConf_joystick ]
  KEY: [ robConf_key, robBrick_key ]
  LARGE: [ robBrick_motor_big ]
  LCD: [ robConf_lcd ]
  LCDI2C: [ robConf_lcdi2c ]
  LED: [ robConf_led ]
  LED_MATRIX: [ robBrick_led_matrix ]
  LED_ON_BOARD: [ makeblockActions_leds_on ]
  LIGHT: [ robConf_light, robBrick_light ]
  LIGHTVEML: [ robConf_lightveml ]
  MEDIUM: [ robBrick_motor_middle ]
  MOISTURE: [ robConf_moisture, robBrick_moisture ]
  MOTION: [ robConf_motion, robBrick_motion ]
  MOTOR: [ robConf_motor ]
  DIFFERENTIALDRIVE: [ robConf_differentialdrive ]
  OTHER: [ robBrick_actor ]
  PIN_VALUE: [ robSensors_pin_getSample ]
  POTENTIOMETER: [ robConf_potentiometer ]
  PULSE: [ robConf_pulse, robBrick_pulse ]
  RELAY: [ robConf_relay ]
  RFID: [ robConf_rfid, robBrick_rfide ]
  RGBLED: [ robConf_rgbled ]
  SERVOMOTOR: [ robConf_servo ]
  SOUND: [ robBrick_sound, robConf_sound ]
  STEPMOTOR: [ robConf_stepmotor ]
  TEMPERATURE: [ robConf_temperature, robBrick_temperature ]
  TIMER: [ robBrick_timer ]
  TOUCH: [ robBrick_touch ,robConf_touch ]
  ULTRASONIC: [ robConf_ultrasonic, robBrick_ultrasonic ]
  WEDO: [ robBrick_WeDo-Brick ]
  WIRELESS: [ robConf_wireless ]
  PARTICLE: [ robConf_particle ]
